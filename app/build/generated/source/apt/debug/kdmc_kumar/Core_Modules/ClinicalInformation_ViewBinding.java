// Generated code from Butter Knife. Do not modify!
package kdmc_kumar.Core_Modules;

import android.support.annotation.CallSuper;
import android.support.annotation.UiThread;
import android.support.design.widget.CoordinatorLayout;
import android.support.v4.widget.NestedScrollView;
import android.support.v7.widget.AppCompatImageView;
import android.support.v7.widget.CardView;
import android.support.v7.widget.RecyclerView;
import android.support.v7.widget.Toolbar;
import android.view.View;
import android.widget.AutoCompleteTextView;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.MultiAutoCompleteTextView;
import android.widget.RadioButton;
import android.widget.Spinner;
import android.widget.TextView;
import butterknife.Unbinder;
import butterknife.internal.Utils;
import displ.mobydocmarathi.com.R;
import java.lang.IllegalStateException;
import java.lang.Override;
import kdmc_kumar.Utilities_Others.CircleImageView;

public class ClinicalInformation_ViewBinding implements Unbinder {
  private ClinicalInformation target;

  @UiThread
  public ClinicalInformation_ViewBinding(ClinicalInformation target) {
    this(target, target.getWindow().getDecorView());
  }

  @UiThread
  public ClinicalInformation_ViewBinding(ClinicalInformation target, View source) {
    this.target = target;

    target.ParentLayout = Utils.findRequiredViewAsType(source, R.id.clinical_parent_layout, "field 'ParentLayout'", CoordinatorLayout.class);
    target.clinicalinformationNesetedscrollview = Utils.findRequiredViewAsType(source, R.id.clinicalinformation_nesetedscrollview, "field 'clinicalinformationNesetedscrollview'", NestedScrollView.class);
    target.imgvwPatientphoto = Utils.findRequiredViewAsType(source, R.id.imgvw_patientphoto, "field 'imgvwPatientphoto'", CircleImageView.class);
    target.tvwAgegender = Utils.findRequiredViewAsType(source, R.id.tvw_agegender, "field 'tvwAgegender'", TextView.class);
    target.txtvwTitlePatientname = Utils.findRequiredViewAsType(source, R.id.txtvw_title_patientname, "field 'txtvwTitlePatientname'", TextView.class);
    target.autocompletePatientname = Utils.findRequiredViewAsType(source, R.id.autocomplete_patientname, "field 'autocompletePatientname'", AutoCompleteTextView.class);
    target.arrowPrevmedhistory = Utils.findRequiredViewAsType(source, R.id.arrow_prevmedhistory, "field 'arrowPrevmedhistory'", ImageButton.class);
    target.primaryPmsLayout = Utils.findRequiredViewAsType(source, R.id.primary_pms_layout, "field 'primaryPmsLayout'", LinearLayout.class);
    target.imgbutotnPrevmedhistory = Utils.findRequiredViewAsType(source, R.id.imgbutotn_prevmedhistory, "field 'imgbutotnPrevmedhistory'", Button.class);
    target.edtPrevmedhistory = Utils.findRequiredViewAsType(source, R.id.edt_prevmedhistory, "field 'edtPrevmedhistory'", EditText.class);
    target.edtPrevmedhistoryOthers = Utils.findRequiredViewAsType(source, R.id.edt_prevmedhistory_others, "field 'edtPrevmedhistoryOthers'", EditText.class);
    target.hidePrevmedhistory = Utils.findRequiredViewAsType(source, R.id.hide_prevmedhistory, "field 'hidePrevmedhistory'", Button.class);
    target.arrowHereditaryDiseases = Utils.findRequiredViewAsType(source, R.id.arrow_hereditary_diseases, "field 'arrowHereditaryDiseases'", ImageButton.class);
    target.primaryHdLayout = Utils.findRequiredViewAsType(source, R.id.primary_hd_layout, "field 'primaryHdLayout'", LinearLayout.class);
    target.buttonHereditaryDiseases = Utils.findRequiredViewAsType(source, R.id.button_hereditary_diseases, "field 'buttonHereditaryDiseases'", Button.class);
    target.edtHereditaryDiseases = Utils.findRequiredViewAsType(source, R.id.edt_hereditary_diseases, "field 'edtHereditaryDiseases'", EditText.class);
    target.edtHereditaryDiseasesOthers = Utils.findRequiredViewAsType(source, R.id.edt_hereditary_diseases_others, "field 'edtHereditaryDiseasesOthers'", EditText.class);
    target.hideHereditaryDiseases = Utils.findRequiredViewAsType(source, R.id.hide_hereditary_diseases, "field 'hideHereditaryDiseases'", Button.class);
    target.arrowPersonalHistory = Utils.findRequiredViewAsType(source, R.id.arrow_personal_history, "field 'arrowPersonalHistory'", ImageButton.class);
    target.primaryPhLayout = Utils.findRequiredViewAsType(source, R.id.primary_ph_layout, "field 'primaryPhLayout'", LinearLayout.class);
    target.spinnerPhSmoking = Utils.findRequiredViewAsType(source, R.id.spinner_ph_smoking, "field 'spinnerPhSmoking'", Spinner.class);
    target.spinnerPhAlcohol = Utils.findRequiredViewAsType(source, R.id.spinner_ph_alcohol, "field 'spinnerPhAlcohol'", Spinner.class);
    target.spinnerPhTobacco = Utils.findRequiredViewAsType(source, R.id.spinner_ph_tobacco, "field 'spinnerPhTobacco'", Spinner.class);
    target.rbtnBowelNormal = Utils.findRequiredViewAsType(source, R.id.rbtn_bowel_normal, "field 'rbtnBowelNormal'", RadioButton.class);
    target.rbtnBowelAltered = Utils.findRequiredViewAsType(source, R.id.rbtn_bowel_altered, "field 'rbtnBowelAltered'", RadioButton.class);
    target.rbtnMicNormal = Utils.findRequiredViewAsType(source, R.id.rbtn_mic_normal, "field 'rbtnMicNormal'", RadioButton.class);
    target.rbtnMicAltered = Utils.findRequiredViewAsType(source, R.id.rbtn_mic_altered, "field 'rbtnMicAltered'", RadioButton.class);
    target.edtPhOthers = Utils.findRequiredViewAsType(source, R.id.edt_ph_others, "field 'edtPhOthers'", AutoCompleteTextView.class);
    target.hidePersonalHistory = Utils.findRequiredViewAsType(source, R.id.hide_personal_history, "field 'hidePersonalHistory'", Button.class);
    target.arrowFamilyMedicialHistory = Utils.findRequiredViewAsType(source, R.id.arrow_family_medicial_history, "field 'arrowFamilyMedicialHistory'", ImageButton.class);
    target.primaryFmhLayout = Utils.findRequiredViewAsType(source, R.id.primary_fmh_layout, "field 'primaryFmhLayout'", LinearLayout.class);
    target.spinnerFmhDieases = Utils.findRequiredViewAsType(source, R.id.spinner_fmh_dieases, "field 'spinnerFmhDieases'", Spinner.class);
    target.buttonFmhSelectrelationship = Utils.findRequiredViewAsType(source, R.id.button_fmh_selectrelationship, "field 'buttonFmhSelectrelationship'", Button.class);
    target.edtFmhSelectedtext = Utils.findRequiredViewAsType(source, R.id.edt_fmh_selectedtext, "field 'edtFmhSelectedtext'", EditText.class);
    target.edtFmhOthers = Utils.findRequiredViewAsType(source, R.id.edt_fmh_others, "field 'edtFmhOthers'", EditText.class);
    target.hideFamilyMedicalHistory = Utils.findRequiredViewAsType(source, R.id.hide_family_medical_history, "field 'hideFamilyMedicalHistory'", Button.class);
    target.arrowMedicationHistory = Utils.findRequiredViewAsType(source, R.id.arrow_medication_history, "field 'arrowMedicationHistory'", ImageButton.class);
    target.primaryMhLayout = Utils.findRequiredViewAsType(source, R.id.primary_mh_layout, "field 'primaryMhLayout'", LinearLayout.class);
    target.edtMhTreatmentfor = Utils.findRequiredViewAsType(source, R.id.edt_mh_treatmentfor, "field 'edtMhTreatmentfor'", MultiAutoCompleteTextView.class);
    target.edtMhMedicineName = Utils.findRequiredViewAsType(source, R.id.edt_mh_medicine_name, "field 'edtMhMedicineName'", AutoCompleteTextView.class);
    target.spinner_mh_period = Utils.findRequiredViewAsType(source, R.id.spinner_mh_period, "field 'spinner_mh_period'", Spinner.class);
    target.buttonMhAdd = Utils.findRequiredViewAsType(source, R.id.button_mh_add, "field 'buttonMhAdd'", Button.class);
    target.hideMedicationHistory = Utils.findRequiredViewAsType(source, R.id.hide_medication_history, "field 'hideMedicationHistory'", Button.class);
    target.arrowAllergy = Utils.findRequiredViewAsType(source, R.id.arrow_allergy, "field 'arrowAllergy'", ImageButton.class);
    target.primaryAllergyLayout = Utils.findRequiredViewAsType(source, R.id.primary_allergy_layout, "field 'primaryAllergyLayout'", LinearLayout.class);
    target.buttonAllergyAdd = Utils.findRequiredViewAsType(source, R.id.button_allergy_add, "field 'buttonAllergyAdd'", Button.class);
    target.edtAllergyText = Utils.findRequiredViewAsType(source, R.id.edt_allergy_text, "field 'edtAllergyText'", EditText.class);
    target.edtAllergyOthers = Utils.findRequiredViewAsType(source, R.id.edt_allergy_others, "field 'edtAllergyOthers'", EditText.class);
    target.hideAllergy = Utils.findRequiredViewAsType(source, R.id.hide_allergy, "field 'hideAllergy'", Button.class);
    target.arrowImmunization = Utils.findRequiredViewAsType(source, R.id.arrow_immunization, "field 'arrowImmunization'", ImageButton.class);
    target.primaryImmunizationLayout = Utils.findRequiredViewAsType(source, R.id.primary_immunization_layout, "field 'primaryImmunizationLayout'", LinearLayout.class);
    target.buttonImmunization = Utils.findRequiredViewAsType(source, R.id.button_immunization, "field 'buttonImmunization'", Button.class);
    target.hideImmunization = Utils.findRequiredViewAsType(source, R.id.hide_immunization, "field 'hideImmunization'", Button.class);
    target.cardEighthAnchistory = Utils.findRequiredViewAsType(source, R.id.card_eighth_anchistory, "field 'cardEighthAnchistory'", CardView.class);
    target.arrowAncHistory = Utils.findRequiredViewAsType(source, R.id.arrow_anc_history, "field 'arrowAncHistory'", ImageButton.class);
    target.primaryAncLayout = Utils.findRequiredViewAsType(source, R.id.primary_anc_layout, "field 'primaryAncLayout'", LinearLayout.class);
    target.chkbxAph = Utils.findRequiredViewAsType(source, R.id.chkbx_aph, "field 'chkbxAph'", CheckBox.class);
    target.chkbxEclampsia = Utils.findRequiredViewAsType(source, R.id.chkbx_eclampsia, "field 'chkbxEclampsia'", CheckBox.class);
    target.chkbxPih = Utils.findRequiredViewAsType(source, R.id.chkbx_pih, "field 'chkbxPih'", CheckBox.class);
    target.chkbxAnaemia = Utils.findRequiredViewAsType(source, R.id.chkbx_anaemia, "field 'chkbxAnaemia'", CheckBox.class);
    target.chkbxObla = Utils.findRequiredViewAsType(source, R.id.chkbx_obla, "field 'chkbxObla'", CheckBox.class);
    target.chkbxPph = Utils.findRequiredViewAsType(source, R.id.chkbx_pph, "field 'chkbxPph'", CheckBox.class);
    target.chkbxLscs = Utils.findRequiredViewAsType(source, R.id.chkbx_lscs, "field 'chkbxLscs'", CheckBox.class);
    target.chkbxCaib = Utils.findRequiredViewAsType(source, R.id.chkbx_caib, "field 'chkbxCaib'", CheckBox.class);
    target.ancOthers = Utils.findRequiredViewAsType(source, R.id.anc_others, "field 'ancOthers'", EditText.class);
    target.hideAncHistory = Utils.findRequiredViewAsType(source, R.id.hide_anc_history, "field 'hideAncHistory'", Button.class);
    target.arrowOtherMedicalHistory = Utils.findRequiredViewAsType(source, R.id.arrow_other_medical_history, "field 'arrowOtherMedicalHistory'", ImageButton.class);
    target.primaryOthersLayout = Utils.findRequiredViewAsType(source, R.id.primary_others_layout, "field 'primaryOthersLayout'", LinearLayout.class);
    target.psntilns = Utils.findRequiredViewAsType(source, R.id.psntilns, "field 'psntilns'", AutoCompleteTextView.class);
    target.pastilnes = Utils.findRequiredViewAsType(source, R.id.pastilnes, "field 'pastilnes'", AutoCompleteTextView.class);
    target.anyMedicatin = Utils.findRequiredViewAsType(source, R.id.any_medicatin, "field 'anyMedicatin'", AutoCompleteTextView.class);
    target.autoObset = Utils.findRequiredViewAsType(source, R.id.auto_obset, "field 'autoObset'", AutoCompleteTextView.class);
    target.autoGyna = Utils.findRequiredViewAsType(source, R.id.auto_gyna, "field 'autoGyna'", AutoCompleteTextView.class);
    target.edtSurgicalRemarks = Utils.findRequiredViewAsType(source, R.id.edt_surgical_remarks, "field 'edtSurgicalRemarks'", AutoCompleteTextView.class);
    target.hideOtherMedicalHistory = Utils.findRequiredViewAsType(source, R.id.hide_other_medical_history, "field 'hideOtherMedicalHistory'", Button.class);
    target.buttonCancel = Utils.findRequiredViewAsType(source, R.id.button_cancel, "field 'buttonCancel'", Button.class);
    target.buttonSkip = Utils.findRequiredViewAsType(source, R.id.button_skip, "field 'buttonSkip'", Button.class);
    target.buttonSubmit = Utils.findRequiredViewAsType(source, R.id.button_submit, "field 'buttonSubmit'", Button.class);
    target.toolbar = Utils.findRequiredViewAsType(source, R.id.toolbar, "field 'toolbar'", Toolbar.class);
    target.toolbarBack = Utils.findRequiredViewAsType(source, R.id.toolbar_back, "field 'toolbarBack'", AppCompatImageView.class);
    target.toolbarTitle = Utils.findRequiredViewAsType(source, R.id.toolbar_title, "field 'toolbarTitle'", TextView.class);
    target.toolbarExit = Utils.findRequiredViewAsType(source, R.id.toolbar_exit, "field 'toolbarExit'", AppCompatImageView.class);
    target.recyclerViewMh = Utils.findRequiredViewAsType(source, R.id.recyclerView_mh, "field 'recyclerViewMh'", RecyclerView.class);
    target.recylerViewImmunization = Utils.findRequiredViewAsType(source, R.id.recylerView_immunization, "field 'recylerViewImmunization'", RecyclerView.class);
  }

  @Override
  @CallSuper
  public void unbind() {
    ClinicalInformation target = this.target;
    if (target == null) throw new IllegalStateException("Bindings already cleared.");
    this.target = null;

    target.ParentLayout = null;
    target.clinicalinformationNesetedscrollview = null;
    target.imgvwPatientphoto = null;
    target.tvwAgegender = null;
    target.txtvwTitlePatientname = null;
    target.autocompletePatientname = null;
    target.arrowPrevmedhistory = null;
    target.primaryPmsLayout = null;
    target.imgbutotnPrevmedhistory = null;
    target.edtPrevmedhistory = null;
    target.edtPrevmedhistoryOthers = null;
    target.hidePrevmedhistory = null;
    target.arrowHereditaryDiseases = null;
    target.primaryHdLayout = null;
    target.buttonHereditaryDiseases = null;
    target.edtHereditaryDiseases = null;
    target.edtHereditaryDiseasesOthers = null;
    target.hideHereditaryDiseases = null;
    target.arrowPersonalHistory = null;
    target.primaryPhLayout = null;
    target.spinnerPhSmoking = null;
    target.spinnerPhAlcohol = null;
    target.spinnerPhTobacco = null;
    target.rbtnBowelNormal = null;
    target.rbtnBowelAltered = null;
    target.rbtnMicNormal = null;
    target.rbtnMicAltered = null;
    target.edtPhOthers = null;
    target.hidePersonalHistory = null;
    target.arrowFamilyMedicialHistory = null;
    target.primaryFmhLayout = null;
    target.spinnerFmhDieases = null;
    target.buttonFmhSelectrelationship = null;
    target.edtFmhSelectedtext = null;
    target.edtFmhOthers = null;
    target.hideFamilyMedicalHistory = null;
    target.arrowMedicationHistory = null;
    target.primaryMhLayout = null;
    target.edtMhTreatmentfor = null;
    target.edtMhMedicineName = null;
    target.spinner_mh_period = null;
    target.buttonMhAdd = null;
    target.hideMedicationHistory = null;
    target.arrowAllergy = null;
    target.primaryAllergyLayout = null;
    target.buttonAllergyAdd = null;
    target.edtAllergyText = null;
    target.edtAllergyOthers = null;
    target.hideAllergy = null;
    target.arrowImmunization = null;
    target.primaryImmunizationLayout = null;
    target.buttonImmunization = null;
    target.hideImmunization = null;
    target.cardEighthAnchistory = null;
    target.arrowAncHistory = null;
    target.primaryAncLayout = null;
    target.chkbxAph = null;
    target.chkbxEclampsia = null;
    target.chkbxPih = null;
    target.chkbxAnaemia = null;
    target.chkbxObla = null;
    target.chkbxPph = null;
    target.chkbxLscs = null;
    target.chkbxCaib = null;
    target.ancOthers = null;
    target.hideAncHistory = null;
    target.arrowOtherMedicalHistory = null;
    target.primaryOthersLayout = null;
    target.psntilns = null;
    target.pastilnes = null;
    target.anyMedicatin = null;
    target.autoObset = null;
    target.autoGyna = null;
    target.edtSurgicalRemarks = null;
    target.hideOtherMedicalHistory = null;
    target.buttonCancel = null;
    target.buttonSkip = null;
    target.buttonSubmit = null;
    target.toolbar = null;
    target.toolbarBack = null;
    target.toolbarTitle = null;
    target.toolbarExit = null;
    target.recyclerViewMh = null;
    target.recylerViewImmunization = null;
  }
}
